<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.card.mapper.MemberMapper">

    <sql id="search">
        <where>
            <if test="word!=null and field=='userid'">
                userid like CONCAT('%',#{word},'%')
            </if>
        </where>
    </sql>

    <resultMap type="com.card.dto.MemberDTO" id="memberMap">
        <id property="userId" column="userid"/>
        <result property="userId" column="userid"/>
        <result property="userpass" column="userpass"/>
        <result property="username" column="username"/>
        <result property="userphone" column="userphone"/>
        <result property="useremail" column="useremail"/>
        <result property="useraddr1" column="useraddr1"/>
        <result property="useraddr2" column="useraddr2"/>
        <result property="useraddr3" column="useraddr3"/>
        <result property="regdate" column="regdate"/>
        <result property="profile" column="profile"/>
        <collection property="authList" resultMap="authMap"/>
    </resultMap>

    <resultMap type="com.card.dto.AuthDTO" id="authMap">
        <result property="userId" column="userid"/>
        <result property="auth" column="auth"/>
    </resultMap>

    <select id="read" resultMap="memberMap">
        select
            users.userid as userId,userpass,username,userphone,useremail,useraddr1,useraddr2,useraddr3,regdate,auth
        from users
                 left outer join auth on
            users.userid=auth.userid
        where users.userid=#{userId}
    </select>

    <insert id="memberJoin">
        insert into users(userid,userpass,username,userphone,useremail,useraddr1,useraddr2,useraddr3,regdate,profile)
        values(#{userId},#{userpass},#{username},#{userphone},#{useremail},#{useraddr1},#{useraddr2},#{useraddr3},now(),#{profile})
    </insert>

    <insert id="authJoin">
        insert into auth values(#{userId},#{auth})
    </insert>

    <select id="findById" parameterType="String" resultType="com.card.dto.MemberDTO">
        select * from users where userid=#{userId}
    </select>

    <update id="update">
        update users set username=#{username},userpass=#{userpass},userphone=#{userphone},useremail=#{useremail},
                         useraddr1=#{useraddr1},useraddr2=#{useraddr2},useraddr3=#{useraddr3},profile=#{profile}
        where userid=#{userId}
    </update>

    <delete id="memberDelete">
        delete from users where userid=#{userId}
    </delete>

    <delete id="authDelete">
        delete from auth where userid=#{userId}
    </delete>

    <select id="idDuplChk" parameterType = "String" resultType="int">
        select count(*) from users where userid=#{userId}
    </select>


    <select id="count" resultType="int">
        select count(*) from users
        <include refid="search"/>
    </select>

    <select id="findAll" resultMap="memberMap">
        select * from users
        <include refid="search"/>
        order by regdate desc limit #{startRow}, #{pageSize}
    </select>

    <select id="getUserName" resultType="String">
        select username from users where userid=#{userId}
    </select>

    <select id="getProfile" resultType="String">
        select profile from users where userid=#{userId}
    </select>

    <select id="getUserId" resultType="String">
        select userId from users
    </select>

</mapper>