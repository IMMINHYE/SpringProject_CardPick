<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.card.mapper.CardMapper">
    <!-- 검색 조건 SQL -->
    <sql id="search">
        <where>
            <if test="word!=null and field=='productName'">
                card_name like CONCAT('%',#{word},'%')
            </if>
        </where>
    </sql>
    <!-- 회사 정보 결과맵 -->
    <resultMap id="companyMap" type="com.card.dto.CompanyDTO">
        <id property="companyName" column="company_name"/>
        <id property="companyCode" column="company_code"/>
    </resultMap>

    <!-- 카드 정보 결과맵 -->
    <resultMap id="cardMap" type="com.card.dto.CardDTO">
        <id property="cardId" column="card_id" />
        <id property="cardName" column="card_name"/>
        <id property="cardImg" column="card_img"/>
        <id property="card_company" column="card_company"/>
        <id property="anual_fee" column="card_anual_fee"/>
        <id property="achievement" column="card_achievement"/>
        <id property="benefit1" column="card_benefit1"/>
        <id property="benefit2" column="card_benefit2"/>
        <id property="benefit3" column="card_benefit3"/>
        <id property="cardUrl" column="card_url"/>
        <id property="companyCode" column="company_code"/>
    </resultMap>

    <!-- 즐겨찾기 정보 결과맵 -->
    <resultMap type="com.card.dto.FavDTO" id="favMap">
        <id property="favId" column="fav_id"/>
        <id property="cardId" column="card_id"/>
        <id property="userId" column="userid"/>
    </resultMap>

    <!-- 즐겨찾기 목록 결과맵 -->
    <resultMap type="com.card.dto.FavListDTO" id="favListMap">
        <collection property="fav" resultMap="favMap"/>
        <collection property="card" resultMap="cardMap"/>
    </resultMap>

    <!-- 카드 및 회사 정보 결과맵 -->
    <resultMap type="com.card.dto.CardCompanyDTO" id="cardCompanyMap">
        <collection property="company" resultMap="companyMap"/>
        <collection property="card" resultMap="cardMap"/>
    </resultMap>

    <!-- 모든 카드 목록 조회 쿼리 -->
    <select id="cardAllList" resultMap="cardMap">
        select * from card
        <include refid="search"/>
        order by card_id desc
        limit #{startRow}, #{pageSize}
    </select>

    <!-- 카드 목록 조회 쿼리 -->
    <select id="cardList" resultMap="cardMap">
        select * from card
        where company_code = #{companyCode}
        order by card_id desc
            limit #{startRow}, #{pageSize}
    </select>

    <!-- 카드 상세 정보 조회 쿼리 -->
    <select id="cardView" resultMap="cardMap">
        select * from card
        where card_id = #{cardtId}
    </select>

    <!-- 리뷰 등록 쿼리 -->
    <insert id="reviewRegister">
        insert into review (content, rating, profile, userid, card_id)
        values (#{content}, #{rating}, #{profile}, #{userId}, #{cardId})
    </insert>

    <!-- 리뷰 삭제 쿼리 -->
    <delete id="deleteReview">
        delete from review where review_id=#{reviewId}
    </delete>

    <!-- 리뷰 목록 조회 쿼리 -->
    <select id="reviewList" resultType="com.card.dto.ReviewDTO">
        select
            review_id as reviewId,
            content, regdate, rating, profile, userid as userId,
            card_id as cardId
        from review
        where card_id = #{cardId}
        order by regdate desc
            limit #{startRow}, #{pageSize}
    </select>

    <!-- 즐겨찾기 추가 쿼리 -->
    <insert id="addFav">
        insert into fav(card_id, userid) values (#{cardId}, #{userId})
    </insert>

    <!-- 즐겨찾기 목록 조회 쿼리 -->
    <select id="favList" resultMap="favListMap">
        select
            fav.card_id, fav_id, card_name, card_img, card_company, card_achievement, card_anual_fee
        from fav
                 left outer join card on
            fav.card_id=card.card_id
        where fav.userid = #{userId}
    </select>

    <!-- 즐겨찾기 삭제 쿼리 -->
    <delete id="favDelete">
        delete from fav where fav_id=#{favId}
    </delete>

    <!-- 리뷰 등록 여부 확인 쿼리 -->
    <select id="reviewCheck" resultType="int">
        select count(*) from review where userid=#{userId} and card_id=#{cardId}
    </select>

    <!-- 즐겨찾기 등록 여부 확인 쿼리 -->
    <select id="favCheck" resultType="int">
        select count(*) from fav where userid=#{userId} and card_id=#{cardId}
    </select>

    <!-- 리뷰 평점 조회 쿼리 -->
    <select id="getReviewStar" resultType="int">
        select rating from review where card_id = #{cardId}
    </select>

    <!-- 리뷰 수 조회 쿼리 -->
    <select id="getReviewCount" resultType="int">
        select count(*) from review where card_id = #{cardId}
    </select>

    <!-- 회사별 카드 수 조회 쿼리 -->
    <select id="getCompanyCount" resultType="int">
        select count(*) from card where company_code =#{companyCode}
    </select>

    <!-- 전체 카드 수 조회 쿼리 -->
    <select id="getCardAllCount" resultType="int">
        select count(*) from card
    </select>

    <!-- 최신 카드 목록 조회 쿼리 -->
    <select id="getLatestCard" resultMap="cardMap">
        select * from card order by card_id desc limit 0,8
    </select>

    <!-- 카드 및 회사 정보 조회 쿼리 -->
    <select id="cardCompany" resultMap="cardCompanyMap">
        select * from card
                          inner join company on card.company_code = card.company_code
        where card.card_id = #{cardId}
    </select>

</mapper>